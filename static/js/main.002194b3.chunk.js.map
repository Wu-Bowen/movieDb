{"version":3,"sources":["components/Movie.jsx","components/Carousel.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","handleDragStart","e","preventDefault","CarouselComponent","id","useState","credits","setCredits","CREDIT_API","process","items","map","cast","profile_path","name","onDragStart","useEffect","fetch","then","res","json","data","mouseTracking","infinite","disableDotsControls","disableButtonsControls","responsive","0","512","1024","autoPlay","Search_API","IMG_API","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","width","height","backgroundColor","border","borderRadius","color","boxShadow","shadows","padding","spacing","App","classes","movies","setMovies","searchTerm","setSearchTerm","modalOpen","setModalOpen","selectedMovie","setSelectedMovie","video","setVideo","window","location","href","includes","search","substring","indexOf","getMovies","API","results","type","onClick","origin","onSubmit","history","pushState","split","placeholder","value","onChange","target","length","movie","key","handleClick","Modal","aria-labelledby","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","backdrop_path","first_air_date","release_date","tagline","Button","variant","startIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.002194b3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nconst setVoteClass = (vote) => {\r\n    if (vote >= 8) {\r\n        return 'green';\r\n    } else if (vote >= 6) {\r\n        return 'orange';\r\n    } else if(vote ==0){\r\n        return 'na';\r\n    }\r\n    else {\r\n        return 'red';\r\n    }\r\n}\r\nconst Movie = ({ title, poster_path, overview, vote_average}) => {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster_path ? IMG_API + poster_path : 'https://images.unsplash.com/photo-1542204165-65bf26472b9b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1267&q=80'} alt={title} />\r\n            <div className=\"movie-info\">\r\n                <h3>{title}</h3>\r\n                <span\r\n                    className={\r\n                        `tag ${setVoteClass(vote_average)}`}>\r\n                    {vote_average === 0? 'N/A' : vote_average}\r\n                </span>\r\n            </div>\r\n            <div className=\"movie-hover\">\r\n                <h2> Summary: </h2>\r\n                <p> {overview} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Movie;","import React, { useState, useEffect } from 'react';\r\nimport AliceCarousel from \"react-alice-carousel\";\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\nimport \"./Carousel.css\";\r\n\r\n\r\nconst handleDragStart = (e) => e.preventDefault();\r\nfunction CarouselComponent({ id }) {\r\n    const [credits, setCredits] = useState([]);\r\n    const CREDIT_API = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`\r\n    const IMG_API = \"https://image.tmdb.org/t/p/w300\";\r\n    const items = credits.map((cast) => (\r\n        <div className=\"carouselItem\">\r\n            <img\r\n                src={cast.profile_path ? `${IMG_API}${cast.profile_path}` : \"https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg\"}\r\n                alt={cast?.name}\r\n                onDragStart={handleDragStart}\r\n                className=\"carouselItem__img\"\r\n            />\r\n            <b className=\"carouselItem__txt\">{cast?.name}</b>\r\n        </div>\r\n    ));\r\n    const responsive = {\r\n        0: {\r\n            items: 3,\r\n        },\r\n        512: {\r\n            items: 5,\r\n        },\r\n        1024: {\r\n            items: 7,\r\n        },\r\n    };\r\n    useEffect(() => {\r\n        fetch(CREDIT_API)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setCredits(data.cast);\r\n            })\r\n    }, [])\r\n    return (\r\n        <AliceCarousel\r\n            mouseTracking\r\n            infinite\r\n            disableDotsControls\r\n            disableButtonsControls\r\n            responsive={responsive}\r\n            items={items}\r\n            autoPlay\r\n        />\r\n    )\r\n}\r\n\r\nexport default CarouselComponent;\r\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Movie from './components/Movie';\nimport Carousel from './components/Carousel';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '@material-ui/core/Button';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=\" + process.env.REACT_APP_MOVIE_API_KEY;\nconst Search_API = \"https://api.themoviedb.org/3/search/movie?&api_key=\" + process.env.REACT_APP_MOVIE_API_KEY + \"&query=\";\nconst IMG_API = \"https://image.tmdb.org/t/p/w500\";\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    paper: {\n        width: \"90%\",\n        height: \"80%\",\n        backgroundColor: \"#39445a\",\n        border: \"1px solid #282c34\",\n        borderRadius: 10,\n        color: \"white\",\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(1, 1, 3),\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n    const [movies, setMovies] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [modalOpen, setModalOpen] = useState(false);\n    const [selectedMovie, setSelectedMovie] = useState({});\n    const [video, setVideo] = useState({});\n\n    useEffect(() => {\n        if (window.location.href.includes('search?=')) {\n            const search = Search_API + window.location.href.substring(window.location.href.indexOf('search?=') + 8);\n            getMovies(search);\n        } else {\n            getMovies(FEATURED_API);\n        }\n    }, [])\n\n    const getMovies = (API) => {\n        fetch(API)\n            .then(res => res.json())\n            .then(data => {\n                setMovies(data.results);\n            });\n    }\n    const handleOnSubmit = (e) => {\n        e.preventDefault();\n        if (searchTerm) {\n            getMovies(Search_API + searchTerm);\n            setSearchTerm('');\n            window.history.pushState({}, null, window.location.href.split('/')[0] + 'search?=' + searchTerm);\n        }\n    }\n    const handleOnChange = (e) => {\n        setSearchTerm(e.target.value);\n    }\n\n    const handleCloseModal = () => {\n        setModalOpen(false);\n    }\n\n    const handleClick = (movie) => {\n        setSelectedMovie(movie);\n        fetch(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`)\n            .then(res => res.json())\n            .then(data => {\n                setVideo(data.results[0]?.key);\n            })\n        setModalOpen(true);\n    }\n    return (\n        <>\n            <header>\n                <MenuIcon />\n                <button\n                    type=\"button\"\n                    className={\"title\"}\n                    onClick={() => window.location = window.location.origin}\n                >\n                    MovieDB\n                </button>\n                <form onSubmit={handleOnSubmit}>\n                    <input\n                        className=\"search\"\n                        type=\"search\"\n                        placeholder=\"Search Movies...\"\n                        value={searchTerm}\n                        onChange={handleOnChange}\n                    />\n                </form>\n\n            </header>\n            < div className=\"movie-container\">\n\n                {movies.length > 0 && movies.map(movie => {\n                    return (\n                        <button\n                            type=\"button\"\n                            key={movie.id}\n                            className={\"button\"}\n                            onClick={() => handleClick(movie)}\n                        >\n                            <Movie  {...movie} />\n                        </button>\n                    )\n                })}\n            </div>\n\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={modalOpen}\n                onClose={handleCloseModal}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={modalOpen}>\n                    {selectedMovie && (\n                        <div className={classes.paper}>\n                            <div className=\"ContentModal\">\n                                <img\n                                    src={\n                                        selectedMovie.poster_path\n                                            ? IMG_API + selectedMovie.poster_path\n                                            : \"https://www.movienewz.com/img/films/poster-holder.jpg\"\n                                    }\n                                    alt={selectedMovie.name || selectedMovie.title}\n                                    className=\"ContentModal__portrait\"\n                                />\n                                <img\n                                    src={\n                                        selectedMovie.backdrop_path\n                                            ? IMG_API + selectedMovie.backdrop_path\n                                            : \"https://user-images.githubusercontent.com/10515204/56117400-9a911800-5f85-11e9-878b-3f998609a6c8.jpg\"\n                                    }\n                                    alt={selectedMovie.name || selectedMovie.title}\n                                    className=\"ContentModal__landscape\"\n                                />\n                                <div className=\"ContentModal__about\">\n                                    <span className=\"ContentModal__title\">\n                                        {selectedMovie.name || selectedMovie.title} (\n                                        {(\n                                            selectedMovie.first_air_date ||\n                                            selectedMovie.release_date ||\n                                            \"-----\"\n                                        ).substring(0, 4)}\n                                        )\n                                    </span>\n                                    {selectedMovie.tagline && (\n                                        <i className=\"tagline\">{selectedMovie.tagline}</i>\n                                    )}\n\n                                    <span className=\"ContentModal__description\">\n                                        {selectedMovie.overview}\n                                    </span>\n\n                                    <div>\n                                        <Carousel id={selectedMovie.id} />\n                                    </div>\n\n                                    <Button\n                                        variant=\"contained\"\n                                        startIcon={<YouTubeIcon />}\n                                        color=\"secondary\"\n                                        target=\"__blank\"\n                                        href={`https://www.youtube.com/watch?v=${video}`}\n                                    >\n                                        Watch the Trailer\n                                    </Button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </Fade>\n            </Modal>\n        </>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}