{"version":3,"sources":["components/Movie.jsx","components/Carousel.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","handleDragStart","e","preventDefault","CarouselComponent","id","useState","credits","setCredits","CREDIT_API","process","items","map","cast","profile_path","name","onDragStart","useEffect","fetch","then","res","json","data","mouseTracking","infinite","disableDotsControls","disableButtonsControls","responsive","0","512","1024","autoPlay","Search_API","IMG_API","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","width","height","backgroundColor","border","borderRadius","color","boxShadow","shadows","padding","spacing","App","classes","movies","setMovies","searchTerm","setSearchTerm","modalOpen","setModalOpen","selectedMovie","setSelectedMovie","video","setVideo","window","location","href","includes","search","substring","indexOf","getMovies","API","results","style","visibility","type","onClick","origin","onSubmit","history","pushState","split","placeholder","value","onChange","target","length","movie","key","handleClick","Modal","aria-labelledby","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","backdrop_path","first_air_date","release_date","tagline","Button","variant","startIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4e07e32.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nconst setVoteClass = (vote) => {\r\n    if (vote >= 8) {\r\n        return 'green';\r\n    } else if (vote >= 6) {\r\n        return 'orange';\r\n    } else if(vote ==0){\r\n        return 'na';\r\n    }\r\n    else {\r\n        return 'red';\r\n    }\r\n}\r\nconst Movie = ({ title, poster_path, overview, vote_average}) => {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster_path ? IMG_API + poster_path : 'https://images.unsplash.com/photo-1542204165-65bf26472b9b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1267&q=80'} alt={title} />\r\n            <div className=\"movie-info\">\r\n                <h3>{title}</h3>\r\n                <span\r\n                    className={\r\n                        `tag ${setVoteClass(vote_average)}`}>\r\n                    {vote_average === 0? 'N/A' : vote_average}\r\n                </span>\r\n            </div>\r\n            <div className=\"movie-hover\">\r\n                <h2> Summary: </h2>\r\n                <p> {overview} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Movie;","import React, { useState, useEffect } from 'react';\r\nimport AliceCarousel from \"react-alice-carousel\";\r\nimport \"react-alice-carousel/lib/alice-carousel.css\";\r\nimport \"./Carousel.css\";\r\n\r\n\r\nconst handleDragStart = (e) => e.preventDefault();\r\nfunction CarouselComponent({ id }) {\r\n    const [credits, setCredits] = useState([]);\r\n    const CREDIT_API = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`\r\n    const IMG_API = \"https://image.tmdb.org/t/p/w300\";\r\n    const items = credits.map((cast) => (\r\n        <div className=\"carouselItem\">\r\n            <img\r\n                src={cast.profile_path ? `${IMG_API}${cast.profile_path}` : \"https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg\"}\r\n                alt={cast?.name}\r\n                onDragStart={handleDragStart}\r\n                className=\"carouselItem__img\"\r\n            />\r\n            <b className=\"carouselItem__txt\">{cast?.name}</b>\r\n        </div>\r\n    ));\r\n    const responsive = {\r\n        0: {\r\n            items: 3,\r\n        },\r\n        512: {\r\n            items: 5,\r\n        },\r\n        1024: {\r\n            items: 7,\r\n        },\r\n    };\r\n    useEffect(() => {\r\n        fetch(CREDIT_API)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setCredits(data.cast);\r\n            })\r\n    }, [])\r\n    return (\r\n        <AliceCarousel\r\n            mouseTracking\r\n            infinite\r\n            disableDotsControls\r\n            disableButtonsControls\r\n            responsive={responsive}\r\n            items={items}\r\n            autoPlay\r\n        />\r\n    )\r\n}\r\n\r\nexport default CarouselComponent;\r\n","import './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Movie from './components/Movie';\r\nimport Carousel from './components/Carousel';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=\" + process.env.REACT_APP_MOVIE_API_KEY;\r\nconst Search_API = \"https://api.themoviedb.org/3/search/movie?&api_key=\" + process.env.REACT_APP_MOVIE_API_KEY + \"&query=\";\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    paper: {\r\n        width: \"90%\",\r\n        height: \"80%\",\r\n        backgroundColor: \"#39445a\",\r\n        border: \"1px solid #282c34\",\r\n        borderRadius: 10,\r\n        color: \"white\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(1, 1, 3),\r\n    },\r\n}));\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n    const [movies, setMovies] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [selectedMovie, setSelectedMovie] = useState({});\r\n    const [video, setVideo] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (window.location.href.includes('search?=')) {\r\n            const search = Search_API + window.location.href.substring(window.location.href.indexOf('search?=') + 8);\r\n            getMovies(search);\r\n        } else {\r\n            getMovies(FEATURED_API);\r\n        }\r\n    }, [])\r\n\r\n    const getMovies = (API) => {\r\n        fetch(API)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setMovies(data.results);\r\n            });\r\n    }\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (searchTerm) {\r\n            getMovies(Search_API + searchTerm);\r\n            setSearchTerm('');\r\n            window.history.pushState({}, null, window.location.href.split('/')[0] + 'search?=' + searchTerm);\r\n        }\r\n    }\r\n    const handleOnChange = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    }\r\n\r\n    const handleCloseModal = () => {\r\n        setModalOpen(false);\r\n    }\r\n\r\n    const handleClick = (movie) => {\r\n        setSelectedMovie(movie);\r\n        fetch(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=${process.env.REACT_APP_MOVIE_API_KEY}&language=en-US`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setVideo(data.results[0]?.key);\r\n            })\r\n        setModalOpen(true);\r\n    }\r\n    return (\r\n        <>\r\n            <header>\r\n                <MenuIcon style={{ visibility: 'hidden' }} />\r\n                <button\r\n                    type=\"button\"\r\n                    className={\"title\"}\r\n                    onClick={() => window.location = window.location.origin + '/movieDb/'}\r\n\r\n                >\r\n                    MovieDB\r\n                </button>\r\n                <form onSubmit={handleOnSubmit}>\r\n                    <input\r\n                        className=\"search\"\r\n                        type=\"search\"\r\n                        placeholder=\"Search Movies...\"\r\n                        value={searchTerm}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                </form>\r\n\r\n            </header>\r\n            < div className=\"movie-container\">\r\n\r\n                {movies.length > 0 && movies.map(movie => {\r\n                    return (\r\n                        <button\r\n                            type=\"button\"\r\n                            key={movie.id}\r\n                            className={\"button\"}\r\n                            onClick={() => handleClick(movie)}\r\n                        >\r\n                            <Movie  {...movie} />\r\n                        </button>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={modalOpen}\r\n                onClose={handleCloseModal}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={modalOpen}>\r\n                    {selectedMovie && (\r\n                        <div className={classes.paper}>\r\n                            <div className=\"ContentModal\">\r\n                                <img\r\n                                    src={\r\n                                        selectedMovie.poster_path\r\n                                            ? IMG_API + selectedMovie.poster_path\r\n                                            : \"https://www.movienewz.com/img/films/poster-holder.jpg\"\r\n                                    }\r\n                                    alt={selectedMovie.name || selectedMovie.title}\r\n                                    className=\"ContentModal__portrait\"\r\n                                />\r\n                                <img\r\n                                    src={\r\n                                        selectedMovie.backdrop_path\r\n                                            ? IMG_API + selectedMovie.backdrop_path\r\n                                            : \"https://user-images.githubusercontent.com/10515204/56117400-9a911800-5f85-11e9-878b-3f998609a6c8.jpg\"\r\n                                    }\r\n                                    alt={selectedMovie.name || selectedMovie.title}\r\n                                    className=\"ContentModal__landscape\"\r\n                                />\r\n                                <div className=\"ContentModal__about\">\r\n                                    <span className=\"ContentModal__title\">\r\n                                        {selectedMovie.name || selectedMovie.title} (\r\n                                        {(\r\n                                            selectedMovie.first_air_date ||\r\n                                            selectedMovie.release_date ||\r\n                                            \"-----\"\r\n                                        ).substring(0, 4)}\r\n                                        )\r\n                                    </span>\r\n                                    {selectedMovie.tagline && (\r\n                                        <i className=\"tagline\">{selectedMovie.tagline}</i>\r\n                                    )}\r\n\r\n                                    <span className=\"ContentModal__description\">\r\n                                        {selectedMovie.overview}\r\n                                    </span>\r\n\r\n                                    <div>\r\n                                        <Carousel id={selectedMovie.id} />\r\n                                    </div>\r\n\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        startIcon={<YouTubeIcon />}\r\n                                        color=\"secondary\"\r\n                                        target=\"__blank\"\r\n                                        href={`https://www.youtube.com/watch?v=${video}`}\r\n                                    >\r\n                                        Watch the Trailer\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Fade>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}